<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <context:annotation-config />

    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <context:component-scan base-package="by.bsu.fpmi" />
    <context:component-scan base-package="by.bsu.fpmi.domain" />
    <context:component-scan base-package="by.bsu.fpmi.service" />
    <context:component-scan base-package="by.bsu.fpmi.dao" />

    <!-- Enables the Spring MVC @Controller programming model -->    
    <mvc:annotation-driven />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>   

    <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource requests to the container's default Servlet -->
    <mvc:default-servlet-handler/>      

    <beans:bean id="tilesConfigurer"
        class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/tiles.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>   
	
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</beans:bean>
    <bean id="jspViewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
 
    <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        p:location="/WEB-INF/jdbc.properties" />
	  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	        <property name="driverClassName" value="${jdbc.driverClassName}"/>
	        <property name="url" value="${jdbc.databaseurl}"/>
	        <property name="username" value="${jdbc.username}"/>
	        <property name="password" value="${jdbc.password}"/>
	        <property name="maxActive" value="100"/>
	        <property name="maxWait" value="1000"/>
	        <property name="poolPreparedStatements" value="true"/>
	        <property name="defaultAutoCommit" value="true"/>
	        <property name="validationQuery" value="SELECT 1" />
	        <property name="testOnBorrow" value="true" />
	</bean>
 
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="by.bsu.fpmi.domain" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
 
    <tx:annotation-driven />
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <bean id="profileDao" class="by.bsu.fpmi.dao.GenericDAO">
        <constructor-arg>
            <value>by.bsu.fpmi.domain.Profile</value>
        </constructor-arg>
	</bean>

	<bean id="photoDao" class="by.bsu.fpmi.dao.GenericDAO">
        <constructor-arg>
            <value>by.bsu.fpmi.domain.Photo</value>
        </constructor-arg>
	</bean>
    
    <bean id="eventDao" class="by.bsu.fpmi.dao.GenericDAO">
        <constructor-arg>
            <value>by.bsu.fpmi.domain.Event</value>
        </constructor-arg>
	</bean>
	
    <bean id="tagDao" class="by.bsu.fpmi.dao.GenericDAO">
        <constructor-arg>
            <value>by.bsu.fpmi.domain.Tag</value>
        </constructor-arg>
	</bean>
	
	<bean id="addressDao" class="by.bsu.fpmi.dao.GenericDAO">
        <constructor-arg>
            <value>by.bsu.fpmi.domain.Address</value>
        </constructor-arg>
	</bean>
	
	<bean id="musicDao" class="by.bsu.fpmi.dao.GenericDAO">
        <constructor-arg>
            <value>by.bsu.fpmi.domain.Music</value>
        </constructor-arg>
	</bean>
    
    <bean id="commentDao" class="by.bsu.fpmi.dao.GenericDAO">
        <constructor-arg>
            <value>by.bsu.fpmi.domain.Comment</value>
        </constructor-arg>
	</bean>
    
    
        
        
</beans>